coord_flip()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hours)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour)) +
facet_wrap(~continent, scales = 'free_x') +
coord_flip()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage)
wage = read.csv('minimum_wage.csv') %>%
dplyr::mutate(iso_a3 = countrycode(country,
destination = 'iso3c', origin = 'country.name'),
country = countrycode(iso_a3,
origin = 'iso3c', destination = 'cldr.short.en')) %>%
dplyr::select(-iso_a3) %>%
tidyr::drop_na()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hours)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour)) +
facet_wrap(~continent, scales = 'free_x') +
coord_flip()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
# dplyr::mutate(country = forcats::fct_reorder(country, hours)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour)) +
facet_wrap(~continent, scales = 'free_x') +
coord_flip()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
# dplyr::mutate(country = forcats::fct_reorder(country, hours)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour), stat = 'identity') +
facet_wrap(~continent, scales = 'free_x') +
coord_flip()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
# dplyr::mutate(country = forcats::fct_reorder(country, hours)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour), stat = 'identity') +
facet_wrap(~continent, scales = 'free_y') +
coord_flip()
gc()
length(unique(data$country))
length(unique(wage$country))
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hour)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour), stat = 'identity') +
facet_wrap(~continent, scales = 'free_y') +
coord_flip()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hour)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour), stat = 'identity') +
facet_wrap(~continent, scales = 'free_y') +
coord_flip() +
theme(panel.grid.minor = element_blank())
ggplot() +
geom_bar(aes(x = country, y = hour, col = continent), stat = 'identity', show.legend = F) +
facet_wrap(~continent, scales = 'free_y') +
coord_flip() +
theme(panel.grid.minor = element_blank())
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
region = countrycode(sourcevar = country,
origin = "country.name",
destination = "region")) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hour)) %>%
dplyr::mutate(continent = ifelse(continent == 'Asia', region, continent),
continent = ifelse(country == 'Euro Zone', 'Europe', continent)) %>%
dplyr::mutate(continent = plyr::mapvalues(continent,
from = c('Oceania', 'Africa', 'Europe & Central Asia', 'South Asia', 'East Asia & Pacific'),
to = c('Other', 'Other', 'Other East', 'Other East', 'Far East'))) %>%
ggplot() +
geom_bar(aes(x = country, y = hour, col = continent), stat = 'identity', show.legend = F) +
facet_wrap(~continent, scales = 'free_y') +
coord_flip() +
theme(panel.grid.minor = element_blank())
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
region = countrycode(sourcevar = country,
origin = "country.name",
destination = "region")) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hour)) %>%
dplyr::mutate(continent = ifelse(continent == 'Asia', region, continent),
continent = ifelse(country == 'Euro Zone', 'Europe', continent)) %>%
dplyr::mutate(continent = plyr::mapvalues(continent,
from = c('Oceania', 'Africa', 'Europe & Central Asia', 'South Asia', 'East Asia & Pacific'),
to = c('Other', 'Other', 'Other East', 'Other East', 'Far East'))) %>%
ggplot() +
geom_bar(aes(x = country, y = hour, fill = continent), stat = 'identity', show.legend = F) +
facet_wrap(~continent, scales = 'free_y') +
coord_flip() +
ggthemes::scale_fill_gdocs() +
theme(panel.grid.minor = element_blank())
View(wage)
data %>% dplyr::filter(country == 'Vietnam')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hour)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour, fill = continent), stat = 'identity', show.legend = F) +
facet_wrap(~continent, scales = 'free_y') +
coord_flip() +
ggthemes::scale_fill_gdocs() +
theme(panel.grid.minor = element_blank())
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
dplyr::mutate(country = forcats::fct_reorder(country, hour)) %>%
ggplot() +
geom_bar(aes(x = country, y = hour, fill = continent), stat = 'identity', show.legend = F) +
facet_wrap(~continent, scales = 'free_y') +
coord_flip() +
ggthemes::scale_fill_gdocs() +
theme(panel.grid.minor = element_blank())
gc()
colnames(wage)
colnames(data)
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot() +
geom_point(aes(x = hourly_wage, y = dollar_price))
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot() +
geom_point(aes(x = hourly_wage, y = dollar_price)) +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F)
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price)) +
geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F)
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price)) +
geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~poly(x, 3), method = 'lm', se = F)
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price)) +
geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~poly(x, 5), method = 'lm', se = F)
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price)) +
geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~x, method = 'lm', se = F)
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price)) +
geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~x, method = 'lm', se = F) +
geom_smooth()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~x, method = 'lm', se = F) +
geom_smooth()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
# geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~x, method = 'lm', se = F) +
geom_text()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
# geom_point(col = 'grey', size = 5) +
# stat_smooth(formula = y~x, method = 'lm', se = F) +
geom_text()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
# geom_point(col = 'grey', size = 5) +
# stat_smooth(formula = y~x, method = 'lm', se = F) +
ggrepel::geom_text_repel()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
# geom_point(col = 'grey', size = 5) +
# stat_smooth(formula = y~x, method = 'lm', se = F) +
ggrepel::geom_label_repel()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
# geom_point(col = 'grey', size = 5) +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
ggrepel::geom_label_repel()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
ggrepel::geom_label_repel() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
# ggrepel::geom_label_repel() +
geom_label() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), show.legend = F) +
# ggrepel::geom_label_repel() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), show.legend = F) +
# ggrepel::geom_label_repel() +
ggthemes::scale_fill_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(fill = continent), show.legend = F) +
# ggrepel::geom_label_repel() +
ggthemes::scale_fill_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(colo = continent), show.legend = F) +
# ggrepel::geom_label_repel() +
ggthemes::scale_col_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), show.legend = F) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
gc()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), show.legend = F, size = 5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), size = 5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), fill = 'white', size = 5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent, fill = 'white'), size = 5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), fill = 'white', size = 5, stroke = 3) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), fill = 'white', size = 5, stroke = 5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), fill = 'white', size = 5, stroke = 2) +
# ggrepel::geom_label_repel() +
# ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
gc()
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), size = 5, stroke = 2) +
geom_point(col = 'white') +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), size = 5) +
geom_point(col = 'white', size = 3) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 3) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 2) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 2) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'red', lwd = 3) +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 2) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey', lwd = 3) +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey', lwd = 3) +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', col = 'grey', lwd = 3) +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey') +
theme(legend.position = 'top')
merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent)) %>%
ggplot(aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey', lwd = 1.5) +
theme(legend.position = 'top')
temp = merge(data, wage, by = 'country') %>%
dplyr::filter(year == 2020) %>%
dplyr::mutate(hour = dollar_price / hourly_wage,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent))
ggplot(temp, aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
# ggrepel::geom_label_repel() +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey', lwd = 1.5) +
theme(legend.position = 'top')
gc()
head(temp)
unique(temp$country)
target = c('China', 'Hong Kong', 'India', 'Japan', 'South Korea', 'Taiwan', 'Thailand', 'UK', 'US')
ggplot(temp, aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
ggrepel::geom_label_repel(data = temp %>%
dplyr::filter(country %in% target)) +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey', lwd = 1.5) +
theme(legend.position = 'top')
ggplot(temp %>% dplyr::filter(!(country %in% target)),
aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
ggrepel::geom_label_repel(data = temp %>% dplyr::filter(country %in% target)) +
ggthemes::scale_color_gdocs() +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey', lwd = 1.5) +
theme(legend.position = 'top')
ggplot(temp %>% dplyr::filter(!(country %in% target)),
aes(x = hourly_wage, y = dollar_price, label = country)) +
geom_point(aes(color = continent), shape = 21, fill = 'white', size = 5, stroke = 1.5) +
stat_smooth(formula = y~poly(x, 2), method = 'lm', se = F, col = 'grey', lwd = 1.5) +
ggrepel::geom_label_repel(data = temp %>% dplyr::filter(country %in% target)) +
ggthemes::scale_color_gdocs() +
theme(legend.position = 'top')
gc()
