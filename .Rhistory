data %>%
dplyr::group_by(Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_bar(aes(x = Project, y = duration), stat = 'identity') +
coord_fixed(ratio = 16/9)
library(lubridate)
data = rbind(x, y) %>%
dplyr::select(Project, Start.date, Start.time, End.date, End.time, Duration) %>%
dplyr::mutate(from = as.POSIXct(paste0(Start.date, Start.time, sep = ' ')),
to = as.POSIXct(paste0(End.date, End.time, sep = ' ')),
duration = as.numeric(difftime(to, from, units = 'mins'))) %>%
dplyr::mutate(weekday = factor(weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')),
hour = hour(from))
str(data)
data %>%
dplyr::group_by(weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot()+
geom_bar(aes(x = weekday, y = duration), stat = 'identity')
data = rbind(x, y) %>%
dplyr::select(Project, Start.date, Start.time, End.date, End.time, Duration) %>%
dplyr::mutate(from = as.POSIXct(paste0(Start.date, Start.time, sep = ' ')),
to = as.POSIXct(paste0(End.date, End.time, sep = ' ')),
duration = as.numeric(difftime(to, from, units = 'mins'))) %>%
dplyr::mutate(weekday = factor(weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')),
hour = hour(from)) %>%
dplyr::filter(from >= as.POSIXct('2020-09-28'))
data %>%
dplyr::group_by(Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_bar(aes(x = Project, y = duration), stat = 'identity')
data %>%
dplyr::group_by(weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot()+
geom_bar(aes(x = weekday, y = duration), stat = 'identity')
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(weekday) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot()+
geom_bar(aes(x = weekday, y = duration), stat = 'identity')
data %>%
dplyr::group_by(Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_bar(aes(x = Project, y = duration), stat = 'identity') +
theme_minimal()
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(weekday) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot()+
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date, Project) %>%
dplyr::summarise(duration = sum(duration))
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date, Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_tile(aes(x = date, y = Project, fill = duration))
data = rbind(x, y) %>%
dplyr::select(Project, Start.date, Start.time, End.date, End.time, Duration) %>%
dplyr::mutate(from = as.POSIXct(paste0(Start.date, Start.time, sep = ' ')),
to = as.POSIXct(paste0(End.date, End.time, sep = ' ')),
duration = as.numeric(difftime(to, from, units = 'mins'))) %>%
dplyr::mutate(weekday = factor(weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')),
hour = hour(from)) #%>%
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date, Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_tile(aes(x = date, y = Project, fill = duration))+
theme_minimal()
data = rbind(x, y) %>%
dplyr::select(Project, Start.date, Start.time, End.date, End.time, Duration) %>%
dplyr::mutate(from = as.POSIXct(paste0(Start.date, Start.time, sep = ' ')),
to = as.POSIXct(paste0(End.date, End.time, sep = ' ')),
duration = as.numeric(difftime(to, from, units = 'mins'))) %>%
dplyr::mutate(weekday = factor(weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')),
hour = hour(from)) %>%
dplyr::filter(from >= as.POSIXct('2020-06-01'))
data %>%
dplyr::group_by(Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_bar(aes(x = Project, y = duration), stat = 'identity') +
theme_minimal()
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(weekday) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot()+
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date, Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_tile(aes(x = date, y = Project, fill = duration))+
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date, Project) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_tile(aes(x = date, y = Project, fill = duration))+
scale_fill_distiller(palette = "Spectral")+
theme_minimal()
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::group_by(weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot()+
geom_tile(aes(x = weekday, y = Project, fill = duration))+
scale_fill_distiller(palette = "Spectral")+
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_line(aes(x = date, y = duration))+
theme_minimal()
data = rbind(x, y) %>%
dplyr::select(Project, Start.date, Start.time, End.date, End.time, Duration) %>%
dplyr::mutate(from = as.POSIXct(paste0(Start.date, Start.time, sep = ' ')),
to = as.POSIXct(paste0(End.date, End.time, sep = ' ')),
duration = as.numeric(difftime(to, from, units = 'mins'))) %>%
dplyr::mutate(weekday = factor(weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')),
hour = hour(from)) %>%
dplyr::filter(from >= as.POSIXct('2020-09-28'))
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_line(aes(x = date, y = duration))+
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration) / 60) %>%
ggplot() +
geom_line(aes(x = date, y = duration))+
ylim(0, 5) +
theme_minimal()
data %>%
dplyr::mutate(date = as.Date(strftime(from, '%Y-%m-%d'))) %>%
dplyr::group_by(date) %>%
dplyr::summarise(duration = sum(duration) / 60) %>%
ggplot() +
geom_bar(aes(x = date, y = duration), stat = 'identity')+
ylim(0, 5) +
theme_minimal()
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) %>%
dplyr::group_by(month, weekdays) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T),
levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_line(aes(x = weekday, y = duration, group = month))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_line(aes(x = weekday, y = duration, group = month)) +
theme_minimal()
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_line(aes(x = weekday, y = duration, group = month)) +
theme_minimal()+
facet_wrap(~month)
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = mean(duration)) %>%
ggplot() +
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()+
facet_wrap(~month)
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, project) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, Project) %>%
dplyr::summarise(duration = mean(duration))
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = sum(duration)) %>%
ggplot() +
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()+
facet_wrap(~month)
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = sum(duration)/60) %>%
ggplot() +
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()+
facet_wrap(~month)
install.packages('clipr')
install.packages('nycflights')
install.packages('nycflight')
install.packages('nycflights13')
data = nycflights13::airlines
write.csv(data, 'airline.csv')
data = nycflights13::airports
write.csv(data, 'airport.csv')
data = nycflights13::flights
write.csv(data, 'flight.csv')
data = nycflights13::planes
write.csv(data, 'plane')
data = nycflights13::weather
write.csv(data, 'weather')
getwd()
write.csv(data, 'weather.csv')
data = nycflights13::planes
write.csv(data, 'plane.csv')
data = nycflights13::airlines
write.csv(data, 'airline.csv', row.names = F)
data = nycflights13::airports
write.csv(data, 'airport.csv', row.names = F)
data = nycflights13::flights
write.csv(data, 'flight.csv', row.names = F)
data = nycflights13::planes
write.csv(data, 'plane.csv', row.names = F)
data = nycflights13::weather
write.csv(data, 'weather.csv', row.names = F)
weather = nycflights13::weather
flight = nycflights13::flights
head(weather)
head(weather)
head(flight)
head(nycflights13::airports)
head(nycflights13::airports)
head(nycflights13::weather)
data = ycflights13::airports
data = nycflights13::airports
unique(data$faa)
library(countrycode)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
setwd('~/Documents/Github/tidytuesday-big-mac-index/')
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
# scales::show_col(scales::brewer_pal(palette = "Set1")(5))
data = readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-22/big-mac.csv') %>%
dplyr::select(date, name, dollar_price, local_price, dollar_ex, gdp_dollar) %>%
dplyr::mutate(name = plyr::mapvalues(name,
from = c('United States', 'United Arab Emirates'),
to = c('USA', 'UAE')))
survey_num = data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year)
missing_country = survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0)) %>%
dplyr::filter(missing >= 10)
temp = survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(number = sum(number)) %>%
dplyr::mutate(country = forcats::fct_reorder(country, number))
temp = survey_num %>%
dplyr::filter(country != 'Euro area') %>%
dplyr::mutate(country = factor(country, levels = levels(temp$country))) %>%
dplyr::mutate(continent = countrycode(sourcevar = country,
origin = "country.name",
destination = "continent"),
region = countrycode(sourcevar = country,
origin = "country.name",
destination = "region")) %>%
dplyr::mutate(continent = ifelse(continent == 'Asia', region, continent)) %>%
dplyr::mutate(continent = plyr::mapvalues(continent,
from = c('Oceania', 'Africa', 'Europe & Central Asia', 'South Asia'),
to = c('Other', 'Other', 'Other Asia', 'Other Asia')))
# dplyr::mutate(continent = ifelse(country == 'Euro area','Europe', continent)) %>%
# dplyr::mutate(continent = plyr::mapvalues(continent,
#                                           from = c('Africa', 'Oceania'),
#                                           to = c('Other', 'Other')))
ggplot(temp, aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.35, alpha = 0.85) +
scale_x_continuous(name = NULL,
breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4),
expand = c(0, 0)) +
scale_y_discrete(name = NULL,
breaks = ,
guide = guide_axis(check.overlap = TRUE)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks=element_line(size=0.15),
axis.ticks.length.y = unit(0.25, 'cm'),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 1.1),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222")) +
guides(fill = guide_legend(title="Number")) +
labs(title = "The Number of Big Mac Index Surverys") +
facet_wrap(~continent, scales = 'free', nrow = 2)
ggplot(temp, aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.35, alpha = 0.85) +
scale_x_continuous(name = NULL,
breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4),
expand = c(0, 0)) +
scale_y_discrete(name = NULL,
breaks = ,
guide = guide_axis(check.overlap = TRUE)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks=element_line(size=0.15),
axis.ticks.length.y = unit(0.25, 'cm'),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 0.95),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222")) +
guides(fill = guide_legend(title="Number")) +
labs(title = "The Number of Big Mac Index Surverys") +
facet_wrap(~continent, scales = 'free', nrow = 2)
ggplot(temp, aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.35, alpha = 0.85) +
scale_x_continuous(name = NULL,
breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4),
expand = c(0, 0)) +
scale_y_discrete(name = NULL,
breaks = ,
guide = guide_axis(check.overlap = TRUE)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks=element_line(size=0.15),
axis.ticks.length.y = unit(0.25, 'cm'),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 1),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222")) +
guides(fill = guide_legend(title="Number")) +
labs(title = "The Number of Big Mac Index Surverys") +
facet_wrap(~continent, scales = 'free', nrow = 2)
ggplot(temp, aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.35, alpha = 0.85) +
scale_x_continuous(name = NULL,
breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4),
expand = c(0, 0)) +
scale_y_discrete(name = NULL,
breaks = ,
guide = guide_axis(check.overlap = TRUE)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks=element_line(size=0.15),
axis.ticks.length.y = unit(0.25, 'cm'),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 1.15),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222")) +
guides(fill = guide_legend(title="Number")) +
labs(title = "The Number of Big Mac Index Surverys") +
facet_wrap(~continent, scales = 'free', nrow = 2)
ggplot(temp, aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.35, alpha = 0.85) +
scale_x_continuous(name = NULL,
breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4),
expand = c(0, 0)) +
scale_y_discrete(name = NULL,
breaks = ,
guide = guide_axis(check.overlap = TRUE)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks=element_line(size=0.15),
axis.ticks.length.y = unit(0.25, 'cm'),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 1.05),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222")) +
guides(fill = guide_legend(title="Number")) +
labs(title = "The Number of Big Mac Index Surverys") +
facet_wrap(~continent, scales = 'free', nrow = 2)
ggplot(temp, aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.35, alpha = 0.85) +
scale_x_continuous(name = NULL,
breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4),
expand = c(0, 0)) +
scale_y_discrete(name = NULL,
breaks = ,
guide = guide_axis(check.overlap = TRUE)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks=element_line(size=0.15),
axis.ticks.length.y = unit(0.25, 'cm'),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 1.08),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222")) +
guides(fill = guide_legend(title="Number")) +
labs(title = "The Number of Big Mac Index Surverys") +
facet_wrap(~continent, scales = 'free', nrow = 2)
