theme_minimal()+
facet_wrap(~month)
data %>%
dplyr::mutate(month = months(from, abbreviate = T) %>%
factor(levels = c('Sep','Oct','Nov','Dec','Jan','Feb','Mar')),
weekday = weekdays(from, abbreviate = T) %>%
factor(levels = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))) %>%
dplyr::group_by(month, weekday, Project) %>%
dplyr::summarise(duration = mean(duration)) %>%
dplyr::group_by(month, weekday) %>%
dplyr::summarise(duration = sum(duration)/60) %>%
ggplot() +
geom_bar(aes(x = weekday, y = duration), stat = 'identity') +
theme_minimal()+
facet_wrap(~month)
install.packages('clipr')
install.packages('nycflights')
install.packages('nycflight')
install.packages('nycflights13')
data = nycflights13::airlines
write.csv(data, 'airline.csv')
data = nycflights13::airports
write.csv(data, 'airport.csv')
data = nycflights13::flights
write.csv(data, 'flight.csv')
data = nycflights13::planes
write.csv(data, 'plane')
data = nycflights13::weather
write.csv(data, 'weather')
getwd()
write.csv(data, 'weather.csv')
data = nycflights13::planes
write.csv(data, 'plane.csv')
data = nycflights13::airlines
write.csv(data, 'airline.csv', row.names = F)
data = nycflights13::airports
write.csv(data, 'airport.csv', row.names = F)
data = nycflights13::flights
write.csv(data, 'flight.csv', row.names = F)
data = nycflights13::planes
write.csv(data, 'plane.csv', row.names = F)
data = nycflights13::weather
write.csv(data, 'weather.csv', row.names = F)
weather = nycflights13::weather
flight = nycflights13::flights
head(weather)
head(weather)
head(flight)
head(nycflights13::airports)
head(nycflights13::airports)
head(nycflights13::weather)
data = ycflights13::airports
data = nycflights13::airports
unique(data$faa)
data = read.csv('Desktop/query_result.csv')
head(Data)
head(data)
library(dplyr)
library(ggplot2)
head(data)
read.csv('Desktop/query_result.csv') %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-')))
data = read.csv('Desktop/query_result.csv')
head(data)
data = read.csv('Desktop/query_result.csv')
colnames(data)[5] = 'amount'
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount)
gc()
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount) %>% head()
?pivot_longer
?pivot_wider
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount) %>%
tidyr::pivot_wider(id_cols = 'date', names_from = 'account', values_from = 'amount')
data %>%
dplyr::mutate(date = as.Date(paste(year, month, day, sep = '-'))) %>%
dplyr::select(date, account, amount) %>%
tidyr::pivot_wider(id_cols = 'date', names_from = 'account', values_from = 'amount') %>% View()
gc()
airline = nycflights13::airlines
head(airline)
clipr::write_clip(airline)
plane = nycflights13::planes
head(plane)
clipr::write_clip(plane)
flight = nycflights13::flights
head(flight)
View(flight)
paste0(flight$year, flight$month, flight$day, flight$dep_time)
paste0(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ')
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ')
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ') %>% as.POSIXct('%Y %m %d %H%M')
library(dplyr)
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ') %>% as.POSIXct('%Y %m %d %H%M')
paste(flight$year, flight$month, flight$day, flight$dep_time, sep = ' ') %>% as.POSIXct(format = '%Y %m %d %H%M')
99 %/% 60
99 // 60
99 %% 60
nycflights13::flights %>%
dplyr::mutate(dep_hour = dep_time %?% 60,
dep_min = dep_time %% 60)
nycflights13::flights %>%
dplyr::mutate(dep_hour = dep_time %/% 60,
dep_min = dep_time %% 60)
nycflights13::flights %>%
dplyr::mutate(dep_hour = dep_time %/% 60,
dep_min = dep_time %% 60) %>% View()
stringr::str_pad(flight$dep_time, 4, 'left','0')
colnames(flight)
nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
time = paste(year, month, day, dep_time, sep = ' ') %>% as.POSIXct("%Y %m %d %H%M"))
temp = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'))
head(temp)
View(temp)
time = paste(temp$year, temp$month, temp$day, temp$dep_time, sep = ' ')
time
paste(temp$year, temp$month, temp$day, temp$dep_time, sep = '-')
paste(temp$year, temp$month, temp$day, temp$dep_time, sep = '-') %>% as.POSIXct(format = '%Y-%m-$d-%H%M')
paste(temp$year, temp$month, temp$day, temp$dep_time, sep = '-') %>% as.POSIXct(format = '%Y-%m-%d-%H%M')
temp = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"))
colnames(flight)
flight = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
dep_time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_dep_time = stringr::str_pad(sched_dep_time, 4, 'left','0'),
sched_dep_time = paste(year, month, day, sched_dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
arr_time = stringr::str_pad(arr_time, 4, 'left','0'),
arr_time = paste(year, month, day, arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_arr_time = stringr::str_pad(sched_arr_time, 4, 'left','0'),
sched_arr_time = paste(year, month, day, sched_arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"))
View(flight)
flight %>%   dplyr::select(-year, -month, -day)
flight = flight %>%   dplyr::select(-year, -month, -day)
flight = flight %>%   dplyr::select(-hour, -minute)
flight = flight %>%   dplyr::select(-time_hour)
flight = flight %>%   dplyr::mutate(speed = distance / (air_time/60))
flight = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
dep_time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_dep_time = stringr::str_pad(sched_dep_time, 4, 'left','0'),
sched_dep_time = paste(year, month, day, sched_dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
arr_time = stringr::str_pad(arr_time, 4, 'left','0'),
arr_time = paste(year, month, day, arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_arr_time = stringr::str_pad(sched_arr_time, 4, 'left','0'),
sched_arr_time = paste(year, month, day, sched_arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M")) %>%
dplyr::select(-year, -month, -day, -hour, -minute, -time_hour) %>%
dplyr::mutate(speed = distance / (air_time/60))
clipr::write_clip(flight)
gc()
nrow(flight)
write.csv(flight, 'nycflight.csv', row.names = F)
getwd()
gc()
clipr::write_clip(airline)
clipr::write_clip(plane)
airport = nycflights13::airports
head(airport)
clipr::write_clip(airport)
weather = nycflights13::weather
head(weather)
View(flight)
weather = nycflights13::weather %>%
dplyr::mutate(time = paste(year, month, day, hour, '00', sep = '-') %>% as.POSIXct(format = '%Y-%m-%d-%H-%M')) %>%
dplyr::select(year, month, day, hour)
head(weather)
weather = nycflights13::weather %>%
dplyr::mutate(time = paste(year, month, day, hour, '00', sep = '-') %>% as.POSIXct(format = '%Y-%m-%d-%H-%M')) %>%
dplyr::select(-year, -month, -day, -hour)
View(weather)
flight = nycflights13::flights %>%
dplyr::mutate(dep_time = stringr::str_pad(dep_time, 4, 'left','0'),
dep_time = paste(year, month, day, dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_dep_time = stringr::str_pad(sched_dep_time, 4, 'left','0'),
sched_dep_time = paste(year, month, day, sched_dep_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
arr_time = stringr::str_pad(arr_time, 4, 'left','0'),
arr_time = paste(year, month, day, arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M"),
sched_arr_time = stringr::str_pad(sched_arr_time, 4, 'left','0'),
sched_arr_time = paste(year, month, day, sched_arr_time, sep = '-') %>% as.POSIXct(format = "%Y-%m-%d-%H%M")) %>%
dplyr::select(-year, -month, -day, -hour, -minute) %>%
dplyr::mutate(speed = distance / (air_time/60))
write.csv(flight,'flight.csv', row.names = F)
write.csv(flight,'nycflight.csv', row.names = F)
gc()
airport = nycflights13::airports
clipr
clipr::write_clip(airport)
clipr::write_clip(plane)
clipr::write_clip(airline)
weather = nycflights13::weather
clipr::write_clip(weather)
library(countrycode)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(patchwork)
library(glue)
library(forcats)
setwd('~/Documents/Github/tidytuesday-big-mac-index/')
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
# scales::show_col(scales::brewer_pal(palette = "Set1")(5))
data = readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-22/big-mac.csv')
str(data)
data = data %>%
dplyr::select(date, name, iso_a3, dollar_price, local_price, dollar_ex, gdp_dollar)
# dplyr::mutate(name = plyr::mapvalues(name,
#                                      from = c('United States', 'United Arab Emirates'),
#                                      to = c('USA', 'UAE')))
head(data, 6)
skimr::skim(data)
# 國家、州名稱
data = data %>%
# dplyr::filter(iso_a3 != 'EUZ') %>%
dplyr::mutate(country = countrycode(iso_a3, origin = 'iso3c', destination = 'cldr.short.en'),
continent = countrycode(iso_a3, origin = "iso3c", destination = "continent")) %>%
dplyr::mutate(country = ifelse(iso_a3 == 'EUZ', 'Euro Zone', country),
continent = ifelse(iso_a3 == 'EUZ', 'Europe', continent)) %>%
dplyr::select(-name, -iso_a3)
# 調查數量
survey_num = data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, country) %>%
tally() %>%
tidyr::spread(country, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year)
missing_country = survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0)) %>%
dplyr::filter(missing >= 12)
temp = survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(number = sum(number)) %>%
dplyr::mutate(country = forcats::fct_reorder(country, number))
temp = survey_num %>%
dplyr::mutate(country = factor(country, levels = levels(temp$country)),
continent = countrycode(sourcevar = country,
origin = "country.name",
destination = "continent"),
region = countrycode(sourcevar = country,
origin = "country.name",
destination = "region")) %>%
dplyr::mutate(continent = ifelse(continent == 'Asia', region, continent),
continent = ifelse(country == 'Euro Zone', 'Europe', continent)) %>%
dplyr::mutate(continent = plyr::mapvalues(continent,
from = c('Oceania', 'Africa', 'Europe & Central Asia', 'South Asia', 'East Asia & Pacific'),
to = c('Other', 'Other', 'Other East', 'Other East', 'Far East')))
temp %>%
dplyr::mutate(country = forcats::fct_reorder(country, number)) %>%
ggplot(aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.35, alpha = 0.85) +
scale_x_continuous(name = NULL,
breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4),
expand = c(0, 0)) +
scale_y_discrete(name = NULL,
breaks = ,
guide = guide_axis(check.overlap = TRUE)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks=element_line(size=0.15),
axis.ticks.length.y = unit(0.25, 'cm'),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 1.08),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222")) +
guides(fill = guide_legend(title="Number")) +
labs(title = "The Number of Big Mac Index Surverys") +
facet_wrap(~continent, scales = 'free', nrow = 2)
# ggsave('survey_number.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
data = data %>%
dplyr::filter(!(country %in% missing_country$country)) %>%
dplyr::mutate(year = year(date)) %>%
dplyr::group_by(year, continent, country) %>%
dplyr::summarise(dollar_price = mean(dollar_price, na.rm = T),
local_price = mean(local_price, na.rm = T),
dollar_ex = mean(dollar_ex, na.rm = T),
gdp_dollar = mean(gdp_dollar, na.rm = T)) %>%
dplyr::select(year, continent, country, dollar_price:gdp_dollar)
# gdp
visdat::vis_miss(data)
# ggsave('missing_value_year.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
data %>%
dplyr::group_by(year) %>%
dplyr::summarise(missing = sum(is.na(gdp_dollar)),
number = n()) %>%
dplyr::mutate(missing_pct = missing / number) %>%
ggplot() +
geom_bar(aes(x = year, y = missing_pct), stat = 'identity') +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 1)) +
xlab('') +
labs(title = 'GDP data Missing Percentage',
subtitle = 'by Year') +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)))
# ggsave('missing_value_year.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
temp = data %>%
dplyr::group_by(country, continent) %>%
dplyr::summarise(missing = sum(is.na(gdp_dollar)),
number = n()) %>%
dplyr::mutate(missing_pct = missing / number,
continent = ifelse(continent %in% c('Africa', 'Oceania'), 'Africa & Oceania', continent))
temp$country = forcats::fct_reorder(temp$country, temp$missing_pct)
ggplot(temp, aes(x = country, y = missing_pct, fill = continent)) +
geom_bar(show.legend = F, stat = 'identity') +
coord_flip() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(breaks = c(0, 0.5, 1)) +
facet_wrap(~continent, scales = 'free_y')  +
labs(title = 'GDP data Missing Percentage',
subtitle = 'by Country') +
xlab('') +
ggthemes::scale_fill_gdocs() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)))
ggsave('missing_value_country.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
gdp = read.csv('gdp_data.csv', header = T)
colnames(gdp)[-1] = seq(1960, 2019)
gdp = gdp %>%
tidyr::gather(key = 'year', value = 'gdp', -name) %>%
dplyr::filter(name %in% data$country)
merge(data, gdp, by.x = c('country','year'), by.y = c('name', 'year')) %>%
dplyr::filter(year >= 2011) %>%
ggplot(aes(x = gdp_dollar, y = gdp)) +
geom_point(col = 'grey', fill = 'lightgrey', size = 5, alpha =0.5) +
stat_smooth(formula = y~x, method = 'lm', se= F, col = 'red', lwd = 1.2, fullrange = T) +
facet_wrap(~year) +
labs(title = 'GDP Data Comparison',
subtitle = "The Economist vs World Bank") +
xlab('GDP in Historical US$') +
ylab('GDP in Current US$') +
theme(panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 18, margin=ggplot2::margin(5,0,5,0)),
plot.caption = element_text(),
legend.position = c(0.85, 1.15),
legend.direction = 'horizontal',
legend.background = element_rect(fill = 'white', size = 0.3),
legend.text = ggplot2::element_text(size=14, color="#222222"))
# ggsave('gdp_compare.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
merge(data, gdp, by.x = c('country','year'), by.y = c('name', 'year'), all.x = T)
naniar::vis_miss(temp)
# ggsave('missing_value_gdp.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
temp = merge(data, gdp, by.x = c('country','year'), by.y = c('name', 'year')) %>%
dplyr::filter(year >= 2011)
model = lm(gdp~ gdp_dollar + year, data = temp)
data = merge(data, gdp, by.x = c('country','year'), by.y = c('name', 'year'), all.x = T)
data$gdp[is.na(data$gdp)] = predict(model, data[is.na(data$gdp), ])
data = data %>% dplyr::select(-gdp_dollar)
naniar::vis_miss(data)
# ggsave('missing_value_gdp.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
# Turkish Lira
data %>%
dplyr::filter(continent == 'Asia') %>%
ggplot() +
geom_line(aes(x = year, y = local_price)) +
facet_wrap(~country, scales = 'free_y') +
theme(panel.grid.minor = element_blank())
# ggsave('pre_analysis.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
p1 = data %>% dplyr::filter(country == 'Turkey') %>%
ggplot(aes(x = year, y = local_price)) +
geom_line(lwd = 1.5)  +
labs(title = 'Before') +
theme(panel.grid.minor = element_blank()) +
ylab('')
data$local_price[data$country == 'Turkey' & data$year < 2005] = data$local_price[data$country == 'Turkey' & data$year < 2005] / 1000000
p2 = data %>% dplyr::filter(country == 'Turkey') %>%
ggplot(aes(x = year, y = local_price)) +
geom_line(lwd = 1.5)  +
labs(title = 'After') +
theme(panel.grid.minor = element_blank()) +
xlab('')
p1 + p2 + plot_annotation(title = 'The Turkish Lira')
# ggsave('turkey_currency.png', width = 16, height = 9, units = 'in', dpi = 500, scale = 0.6)
data = data %>%
dplyr::select(continent, country, year, dollar_price, local_price, dollar_ex, gdp)
knitr::kable(head(data, 5))
str(data)
colSums(is.na(data))/nrow(data)
data %>% dplyr::group_by(country) %>% dplyr::summarise(min(local_price))
data %>% dplyr::filter(country == 'Saudi Arabia')
9/2.4
data %>% dplyr::filter(country == 'Argentina')
210/2.5
data %>% dplyr::filter(country == 'Costa Rica')
(1800-1130)/1130
library(countrycode)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(patchwork)
library(glue)
library(ggrepel)
setwd('~/Documents/Github/tidytuesday-big-mac-index/')
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
data = read.csv('clean_data.csv')
highlight = c('Ukraine', 'Egypt', 'Brazil', 'Uruguay', 'Sri Lanka',
'Russia', 'Hungary', 'Turkey', 'Australia', 'Saudi Arabia',
'Peru', 'Switzerland', 'Taiwan', 'South Africa')
temp = data %>%
dplyr::group_by(country) %>%
arrange(year) %>%
dplyr::mutate(local_price = local_price/sum((row_number() == 1)*local_price),
facet = ifelse(continent %in% c('Oceania', 'Americas'), 'Americas & Oceania', continent)) %>%
dplyr::filter(country != 'Argentina')
ggplot() +
geom_line(data = temp %>% dplyr::filter(!(country %in% highlight)),
aes(x = year, y = local_price, group = country), col = 'lightgrey',
lwd = 0.5, show.legend = F) +
geom_line(data = temp %>% dplyr::filter(country %in% highlight),
aes(x = year, y = local_price, group = country, col = continent),
lwd = 1.125, show.legend = F) +
geom_text(data =temp %>% dplyr::filter(country %in% highlight & year == 2020),
aes(x = 2020.25, y = local_price, label = country),
hjust = 0, check_overlap = T) +
facet_wrap(~facet) +
scale_x_continuous(breaks = seq(2000, 2020, 5),
limits = c(2000, 2025)) +
theme(panel.grid.minor = element_blank()) +
ggthemes::scale_color_gdocs() +
ylab("Gorwth Percentage") + xlab('') +
labs(title = 'Big Mac Price Surges over the Past 20 Years',
subtitle = '2000 as Base Period')
temp = data %>%
dplyr::group_by(country) %>%
arrange(year) %>%
dplyr::mutate(local_price = local_price/sum((row_number() == 1)*local_price),
facet = ifelse(continent %in% c('Oceania', 'Americas'), 'Americas & Oceania', continent))
head(temp)
temp %>% dplyr::filter(country =='Argentina')
temp %>% dplyr::filter(country =='Argentina') %>% dplyr::select(year, local_price)
temp %>% dplyr::filter(country =='Argentina') %>% dplyr::select(year, local_price)
temp %>% dplyr::filter(country =='Argentina') %>% ggplot() + geom_line(aes(x = year, y = local_price))
ggplot() +
geom_line(data = temp %>% dplyr::filter(!(country %in% highlight)),
aes(x = year, y = local_price, group = country), col = 'lightgrey',
lwd = 0.5, show.legend = F) +
geom_line(data = temp %>% dplyr::filter(country %in% highlight),
aes(x = year, y = local_price, group = country, col = continent),
lwd = 1.125, show.legend = F) +
geom_text(data =temp %>% dplyr::filter(country %in% highlight & year == 2020),
aes(x = 2020.25, y = local_price, label = country),
hjust = 0, check_overlap = T) +
facet_wrap(~facet) +
scale_x_continuous(breaks = seq(2000, 2020, 5),
limits = c(2000, 2025)) +
theme(panel.grid.minor = element_blank()) +
ggthemes::scale_color_gdocs() +
ylab("Gorwth Percentage") + xlab('') +
labs(title = 'Big Mac Price Surges over the Past 20 Years',
subtitle = '2000 as Base Period')
temp = data %>%
dplyr::group_by(country) %>%
arrange(year) %>%
dplyr::mutate(local_price = local_price/sum((row_number() == 1)*local_price),
facet = ifelse(continent %in% c('Oceania', 'Americas'), 'Americas & Oceania', continent)) %>%
dplyr::filter(country != 'Argentina')
ggplot() +
geom_line(data = temp %>% dplyr::filter(!(country %in% highlight)),
aes(x = year, y = local_price, group = country), col = 'lightgrey',
lwd = 0.5, show.legend = F) +
geom_line(data = temp %>% dplyr::filter(country %in% highlight),
aes(x = year, y = local_price, group = country, col = continent),
lwd = 1.125, show.legend = F) +
geom_text(data =temp %>% dplyr::filter(country %in% highlight & year == 2020),
aes(x = 2020.25, y = local_price, label = country),
hjust = 0, check_overlap = T) +
facet_wrap(~facet) +
scale_x_continuous(breaks = seq(2000, 2020, 5),
limits = c(2000, 2025)) +
theme(panel.grid.minor = element_blank()) +
ggthemes::scale_color_gdocs() +
ylab("Gorwth Percentage") + xlab('') +
labs(title = 'Big Mac Price Surges over the Past 20 Years',
subtitle = '2000 as Base Period')
gc()
ggplot() +
geom_line(data = temp %>% dplyr::filter(!(country %in% highlight)),
aes(x = year, y = local_price, group = country), col = 'lightgrey',
lwd = 0.5, show.legend = F) +
geom_line(data = temp %>% dplyr::filter(country %in% highlight),
aes(x = year, y = local_price, group = country, col = continent),
lwd = 1.125, show.legend = F) +
geom_text(data =temp %>% dplyr::filter(country %in% highlight & year == 2020),
aes(x = 2020.25, y = local_price, label = country),
hjust = 0, check_overlap = T) +
scale_x_continuous(breaks = seq(2000, 2020, 5),
limits = c(2000, 2025)) +
theme(panel.grid.minor = element_blank()) +
ggthemes::scale_color_gdocs() +
ylab("Gorwth Percentage") + xlab('') +
labs(title = 'Big Mac Price Surges over the Past 20 Years',
subtitle = '2000 as Base Period')
