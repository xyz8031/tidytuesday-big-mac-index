df$z = f(df$x)
mean(df$y <= df$z)
n = 1000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 1000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 1000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 1000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 1000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 10000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 10000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 10000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 10000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
n = 10000
df = data.frame(x = runif(n),
y = runif(n))
df$z = f(df$x)
mean(df$y <= df$z)
rnorm(25, 3)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
xbarstar
curve(dnorm(x, 3, 0.2), add = TRUE)
src
srs
?replicate
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
sd(xbarstar)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
library(boot)
boot(iris$Sepal.Length, mean,  R = 1000)
?boot
blogdown::install_hugo()
gc
9
gc()
install.packages('quantmod')
library(quantmod)
getSymbols('^TWII')
library(tidyquant)
install.packages('tidyquant')
library(tidyquant)
library(tidyquant)
stockData <- c("^TWII", "2317.TW", "2330.TW", "2412.TW") %>%
tq_get(get = "stock.price", from = "2017-06-01", to = "2018-05-31")
library(dplyr)
stockData <- c("^TWII", "2317.TW", "2330.TW", "2412.TW") %>%
tq_get(get = "stock.price", from = "2017-06-01", to = "2018-05-31")
devtools::install_github("business-science/tidyquant")
gc()
gc()
library(dplyr)
library(ggplot2)
library(raster)
install.packages('raster')
library(raster)
library(rasterVis)
install.packages('rasterVis')
library(rasterVis)
library(scales)
library(rgeos)
install.packages('')
install.packages('rgeos')
gc()
library(rgeos)
nz1 <- getData('GADM', country='NZL', level=1)
nz1 <- subset(nz1,NAME_1 %in% c("Southland","Otago","West Coast"))
nz1c <- gCentroid(nz1) %>% coordinates()
dem1 <- getData("SRTM",lat=nz1c[2],lon=nz1c[1],path=datadir)
df = read.csv('Desktop/tabular_aadt_2017.csv')
gc(
)
View(df)
curve(0.5 * log((1-x)/x), from = 0, to = 1)
library(ggplot2)
ggsave('AdBoost.png', width = 3, height = 3, units = 'cm', dip = 500)
ggsave('AdBoost.png', width = 3, height = 3, units = 'cm', dpi  = 500)
getwd()
x = exp(-(seq(-2.3, 2.3, length.out = 100)))
x
?seq
y = exp((seq(-2.3, 2.3, length.out = 100)))
y
plot((seq(-2.3, 2.3, length.out = 100), x)
plot(seq(-2.3, 2.3, length.out = 100), x)
plot(seq(-2.3, 2.3, length.out = 100), x, type = 'l')
lines(y, col = 'red')
y
plot(seq(-2.3, 2.3, length.out = 100), x, type = 'l')
lines(seq(-2.3, 2.3, length.out = 100), y, col = 'red')
xgc()
gc()
plot(seq(-2.3, 2.3, length.out = 100), x, type = 'l', col = 'blue')
lines(seq(-2.3, 2.3, length.out = 100), y, col = 'red')
install.packages('corpcor')
?rnorm
x1 = seq(0, 10, length.out = 30)
x2 = seq(0, 1, , length.out = 30)
y = x1^2 + 2 * x2 + rnorm(30)
X = matrix(c(x1, x2), nrow = 30)
X
y
corpcor::pseudoinverse(X)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) * Y
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
x0 = rep(0, 30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
x0 = rep(1, 30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
x0 = rep(1, 30)
x1 = seq(0, 10, length.out = 30)
x2 = seq(0, 5, , length.out = 30)
y = x1^2 + 2 * x2 + rnorm(30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
x0 = rep(1, 30)
x1 = seq(0, 10, length.out = 30)
x2 = seq(0, 100, , length.out = 30)
y = x1^2 + 2 * x2 + rnorm(30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
21*seq(3, 15, 3)
library(countrycode)
library(dplyr)
library(ggplot2)
library(gganimate)
setwd('~/Documents/Github/tidytuesday-big-mac-index/')
theme_set(theme_minimal(base_family = 'Raleway', base_size = 10))
data = readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-22/big-mac.csv') %>%
dplyr::select(date, name, dollar_price, local_price, dollar_ex, gdp_dollar) %>%
dplyr::mutate(continent = countrycode(sourcevar = name,
origin = "country.name",
destination = "continent")) %>%
dplyr::mutate(continent = ifelse(name == 'Euro area','Europe', continent))
head(data)
survey_num = data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year)
missing_country = survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0)) %>%
dplyr::filter(missing >= 12)
ggplot(survey_num, aes(x = year, y = country, fill = factor(number))) +
geom_tile( col = 'white', size = 0.5, alpha = 0.85) +
scale_x_continuous(breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4)) +
# scale_y_discrete(breaks = missing_country$country,
#                  labels = missing_country$country,
#                  expand=c(0,0)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.text.y=element_text(vjust=0.2),
axis.ticks=element_line(size=0.15)) +
guides(fill = guide_legend(title="Number of\nSurveys")) +
labs(x = '', y = '', title = 'The Number of Big Mac Index Surverys')
survey_num
missing_country = survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0)) %>%
dplyr::filter(missing >= 10)
missing_country
unique(date(data$date))
unique(lubridate::date(data$date))
unique(lubridate::year(data$date))
length(unique(lubridate::year(data$date)))
survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0)) %>%
dplyr::filter(missing >= 10)
survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0))
survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0),
total = n())
survey_num %>%
dplyr::group_by(country) %>%
dplyr::summarise(missing = sum(number == 0),
total = n()) %>%
dplyr::filter(missing >= 10)
library(lubridate)
country = data %>%
dplyr::group_by(name) %>%
tally() %>%
dplyr::filter(n >= 10)
country
data %>%
dplyr::filter(name %in% country$name & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
gc()
head(data)
library(tidyr)
data %>%
dplyr::mutate(year = year(date)) %>%
dplyr::group_by(year, name) %>%
dplyr::summarise(across(dollar_price:dollar_price, mean))
data %>%
dplyr::mutate(year = year(date)
)
data %>%
dplyr::mutate(year = year(date)) %>%
dplyr::group_by(year, name) %>%
dplyr::summarise(dollar_price = mean(dollar_price),
local_price = mean(local_price),
dollar_ex = mean(dollar_ex),
gdp_dollar = mean(gdp_dollar))
data %>%
dplyr::mutate(year = year(date)) %>%
dplyr::group_by(year, name) %>%
dplyr::summarise(dollar_price = mean(dollar_price),
local_price = mean(local_price),
dollar_ex = mean(dollar_ex),
gdp_dollar = mean(gdp_dollar)) %>%
dplyr::mutate(continent = countrycode(sourcevar = name,
origin = "country.name",
destination = "continent")) %>%
dplyr::mutate(continent = ifelse(name == 'Euro area','Europe', continent))
data %>%
dplyr::mutate(year = year(date)) %>%
dplyr::group_by(year, name) %>%
dplyr::summarise(dollar_price = mean(dollar_price),
local_price = mean(local_price),
dollar_ex = mean(dollar_ex),
gdp_dollar = mean(gdp_dollar)) %>%
dplyr::mutate(continent = countrycode(sourcevar = name,
origin = "country.name",
destination = "continent")) %>%
dplyr::mutate(continent = ifelse(name == 'Euro area','Europe', continent))
data %>%
dplyr::mutate(year = year(date)) %>%
dplyr::group_by(year, name) %>%
dplyr::summarise(dollar_price = mean(dollar_price),
local_price = mean(local_price),
dollar_ex = mean(dollar_ex),
gdp_dollar = mean(gdp_dollar)) %>%
dplyr::mutate(continent = countrycode(sourcevar = name,
origin = "country.name",
destination = "continent")) %>%
dplyr::mutate(continent = ifelse(name == 'Euro area','Europe', continent)) %>%
dplyr::select(year, name, continent, dollar_price:gdp_dollar)
gc()
data = data %>%
dplyr::mutate(year = year(date)) %>%
dplyr::group_by(year, name) %>%
dplyr::summarise(dollar_price = mean(dollar_price),
local_price = mean(local_price),
dollar_ex = mean(dollar_ex),
gdp_dollar = mean(gdp_dollar)) %>%
dplyr::mutate(continent = countrycode(sourcevar = name,
origin = "country.name",
destination = "continent")) %>%
dplyr::mutate(continent = ifelse(name == 'Euro area','Europe', continent)) %>%
dplyr::select(year, name, continent, dollar_price:gdp_dollar)
head(data)
knitr::kable(head(data, 5))
knitr::kable(head(data, 5), digits = 2)
gc()
install.packages('WDI')
WDI::WDIsearch('gdp')
WDI::WDIsearch('gdp per capita')
WDI::WDIsearch('gdp per capita')
gc()
data %>%
dplyr::filter(name %in% country$name & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
head(data)
country$name
data %>%
dplyr::filter(name %in% country$name & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
data %>%
dplyr::filter(name %in% country$name & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
# scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
data
data %>%
dplyr::filter(name %in% country$name & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = year, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
# scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
missing_country$country
data %>%
dplyr::filter(!(name %in% missing_country$country) & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = year, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
# scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
gc()
?labs
data %>%
dplyr::filter(!(name %in% missing_country$country) & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = year, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
labs(x = '', y = '', title = 'Asia') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
data %>%
dplyr::filter(!(name %in% missing_country$country) & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = year, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
labs(x = '', y = '', title = 'Price of Big Mac in Local Currency Across Asia') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
data %>%
dplyr::filter(!(name %in% missing_country$country) & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = year, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
labs(x = '', y = '', title = 'Price of Big Mac in Local Currency Across Asia') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'none')
gc()
data %>%
dplyr::filter(!(name %in% missing_country$country) & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = year, y = dollar_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name, scales = 'free') +
labs(x = '', y = '', title = 'Price of Big Mac in Local Currency Across Asia') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'none')
ggsave('plot.png', width = 16, height = 9, units = 'in', dpi =  500)
gc()
ggplot(data) + geom_point(aes(x = year, y = local_price))
data
max(data$local_price)
data %>% arrange(desc(local_price))
data %>%
dplyr::filter(!(name %in% missing_country$country) & continent == 'Asia') %>%
# dplyr::mutate(name = forcats::fct_reorder(name, continent)) %>%
ggplot(aes(x = year, y = local_price, col = continent)) +
geom_line(lwd = 1.2) +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name, scales = 'free') +
labs(x = '', y = '', title = 'Price of Big Mac in Local Currency Across Asia') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'none')
min(data$local_price)
data %>% dplyr::filter(name == 'Turkey')
ggsave('plot.png', width = 16, height = 9, units = 'in', dpi =  500)
