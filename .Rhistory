rnorm(25, 3)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
xbarstar
curve(dnorm(x, 3, 0.2), add = TRUE)
src
srs
?replicate
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
sd(xbarstar)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
srs <- rnorm(25, mean = 3)
resamps <- replicate(1000, sample(srs, 25, TRUE), simplify = FALSE)
xbarstar <- sapply(resamps, mean, simplify = TRUE)
hist(xbarstar, breaks = 40, prob = TRUE)
curve(dnorm(x, 3, 0.2), add = TRUE)
library(boot)
boot(iris$Sepal.Length, mean,  R = 1000)
?boot
blogdown::install_hugo()
gc
9
gc()
install.packages('quantmod')
library(quantmod)
getSymbols('^TWII')
library(tidyquant)
install.packages('tidyquant')
library(tidyquant)
library(tidyquant)
stockData <- c("^TWII", "2317.TW", "2330.TW", "2412.TW") %>%
tq_get(get = "stock.price", from = "2017-06-01", to = "2018-05-31")
library(dplyr)
stockData <- c("^TWII", "2317.TW", "2330.TW", "2412.TW") %>%
tq_get(get = "stock.price", from = "2017-06-01", to = "2018-05-31")
devtools::install_github("business-science/tidyquant")
gc()
gc()
library(dplyr)
library(ggplot2)
library(raster)
install.packages('raster')
library(raster)
library(rasterVis)
install.packages('rasterVis')
library(rasterVis)
library(scales)
library(rgeos)
install.packages('')
install.packages('rgeos')
gc()
library(rgeos)
nz1 <- getData('GADM', country='NZL', level=1)
nz1 <- subset(nz1,NAME_1 %in% c("Southland","Otago","West Coast"))
nz1c <- gCentroid(nz1) %>% coordinates()
dem1 <- getData("SRTM",lat=nz1c[2],lon=nz1c[1],path=datadir)
df = read.csv('Desktop/tabular_aadt_2017.csv')
gc(
)
View(df)
curve(0.5 * log((1-x)/x), from = 0, to = 1)
library(ggplot2)
ggsave('AdBoost.png', width = 3, height = 3, units = 'cm', dip = 500)
ggsave('AdBoost.png', width = 3, height = 3, units = 'cm', dpi  = 500)
getwd()
x = exp(-(seq(-2.3, 2.3, length.out = 100)))
x
?seq
y = exp((seq(-2.3, 2.3, length.out = 100)))
y
plot((seq(-2.3, 2.3, length.out = 100), x)
plot(seq(-2.3, 2.3, length.out = 100), x)
plot(seq(-2.3, 2.3, length.out = 100), x, type = 'l')
lines(y, col = 'red')
y
plot(seq(-2.3, 2.3, length.out = 100), x, type = 'l')
lines(seq(-2.3, 2.3, length.out = 100), y, col = 'red')
xgc()
gc()
plot(seq(-2.3, 2.3, length.out = 100), x, type = 'l', col = 'blue')
lines(seq(-2.3, 2.3, length.out = 100), y, col = 'red')
install.packages('corpcor')
?rnorm
x1 = seq(0, 10, length.out = 30)
x2 = seq(0, 1, , length.out = 30)
y = x1^2 + 2 * x2 + rnorm(30)
X = matrix(c(x1, x2), nrow = 30)
X
y
corpcor::pseudoinverse(X)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) * Y
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
x0 = rep(0, 30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
x0 = rep(1, 30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
x0 = rep(1, 30)
x1 = seq(0, 10, length.out = 30)
x2 = seq(0, 5, , length.out = 30)
y = x1^2 + 2 * x2 + rnorm(30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
x0 = rep(1, 30)
x1 = seq(0, 10, length.out = 30)
x2 = seq(0, 100, , length.out = 30)
y = x1^2 + 2 * x2 + rnorm(30)
X = matrix(c(x0, x1, x2), nrow = 30)
Y = matrix(y, nrow = 30)
corpcor::pseudoinverse(X) %*% Y
data = data.frame(x1 = x1,
x2 = x2,
y = y)
model = lm(y ~ ., data)
summary(model)
21*seq(3, 15, 3)
library(countrycode)
library(dplyr)
library(ggplot2)
library(gganimate)
setwd('~/Documents/Github/tidytuesday-big-mac-index/')
theme_set(theme_minimal(base_family = 'Raleway', base_size = 14))
data = readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-22/big-mac.csv') %>%
dplyr::filter(name != 'Euro area') %>%
dplyr::select(date, name, dollar_price, gdp_dollar) %>%
dplyr::mutate(continent = countrycode(sourcevar = name,
origin = "country.name",
destination = "continent"))
country = data %>%
dplyr::group_by(name) %>%
tally() %>%
dplyr::filter(n >= 10)
data %>%
dplyr::filter(name %in% country$name) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line() +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name, scales = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
data %>%
dplyr::filter(name %in% country$name) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line()
data %>%
dplyr::filter(name %in% country$name) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line() +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name, scales = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '5 year', date_labels = '%Y') +
theme(panel.grid.minor = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
data %>%
dplyr::filter(name %in% country$name) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line() +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name, scales = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '10 year', date_labels = '%Y') +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
gc()
data %>%
dplyr::filter(name %in% country$name) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line() +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '10 year', date_labels = '%Y') +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal')
data %>%
dplyr::filter(name %in% country$name) %>%
ggplot(aes(x = date, y = dollar_price, col = continent)) +
geom_line() +
# stat_smooth(formula = y~x, method = 'lm', se = F, lwd = 0.75) +
facet_wrap(~name) +
scale_color_brewer(palette = 'Set1') +
scale_x_date(date_breaks = '10 year', date_labels = '%Y') +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal') +
theme_bw()
write.csv(data, file = 'data.csv')
write.csv(data %>% filter(lubridate::year(date) == 2020), file = 'data.csv', row.names = F)
data %>% dplyr::group_by(date) %>% tally()
data %>% dplyr::group_by(date) %>% tally() %>% arrange(desc(n))
write.csv(data %>% filter(lubridate::year(date) == 2018), file = 'data.csv', row.names = F)
data %>% filter(year(date) == 2020 & name == 'Taiwan')
data %>% filter(year(date) == 2020)
data %>% filter(lubridate::year(date) == 2020)
data %>% filter(lubridate::year(date) == 2020 & name == 'Taiwan')
data %>% filter(lubridate::year(date) == 2018 & name == 'Taiwan')
data %>% mutate(year = lubridate::year(date)) %>% group_by(date, name) %>% tally()
data %>% mutate(year = lubridate::year(date)) %>% group_by(year, name) %>% tally() )
data %>% mutate(year = lubridate::year(date)) %>% group_by(year, name) %>% tally()
data %>% mutate(year = lubridate::year(date)) %>% group_by(year, name) %>% tally() %>% tidyr::spread(name, n)
data %>% mutate(year = lubridate::year(date)) %>% group_by(year, name) %>% tally() %>% tidyr::spread(name, n) %>% View()
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally()
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = n))
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::replace_na() %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = n))
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::replace_na(0) %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = n))
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
mutate(n = tidyr::replace_na(n, 0)) %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = n))
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
mutate(n = tidyr::replace_na(n, 0))
temp = data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally()
sum(is.na(temp$n))
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
# mutate(n = tidyr::replace_na(n, 0)) %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = n)) +
scale_fill_gradient(low = "white",
high = "steelblue"))
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
# mutate(n = tidyr::replace_na(n, 0)) %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = n)) +
scale_fill_gradient(low = "white",
high = "steelblue")
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
# mutate(n = tidyr::replace_na(n, 0)) %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = n), col = 'white') +
scale_fill_gradient(low = "white",
high = "steelblue")
gc()
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
# mutate(n = tidyr::replace_na(n, 0)) %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = factor(n)), col = 'white') +
scale_fill_manual(values=c("#d53e4f","#e6f598","#ddf1da"),
na.value = "grey90")
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
mutate(n = tidyr::replace_na(n, 0)) %>%
ggplot() +
geom_tile(aes(x = year, y = name, fill = factor(n)), col = 'white') +
scale_fill_manual(values=c("#d53e4f","#e6f598","#ddf1da"),
na.value = "grey90")
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
mutate(n = tidyr::replace_na(n, 0))
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
mutate(n = tidyr::replace_na(n, 0)) %>% arrange(n)
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n)
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number')
?tidyr::gather
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0)
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year)
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year) %>%
ggplot() +
geom_tile(aes(x = year, y = country, fill = factor(number)), col = 'white') +
scale_fill_manual(values=c("#d53e4f","#e6f598","#ddf1da"),
na.value = "grey90")
theme(panel.grid.major.y = element_blank(),
panel.grid.major = element_blank())
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year) %>%
ggplot() +
geom_tile(aes(x = year, y = country, fill = factor(number)), col = 'white') +
scale_fill_manual(values=c("#d53e4f","#e6f598","#ddf1da"),
na.value = "grey90") +
theme(panel.grid.major.y = element_blank(),
panel.grid.major = element_blank())
gc()
range(data$date)
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year) %>%
ggplot() +
geom_tile(aes(x = year, y = country, fill = factor(number)), col = 'white') +
scale_x_continuous(breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4)) +
scale_fill_manual(values=c("#d53e4f","#e6f598","#ddf1da")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank())
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year) %>%
ggplot() +
geom_tile(aes(x = year, y = country, fill = factor(number)), col = 'white') +
scale_x_continuous(breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4)) +
scale_fill_manual(values=c("#d53e4f","#f46d43","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank())
gc()
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year) %>%
ggplot() +
geom_tile(aes(x = year, y = country, fill = factor(number)), col = 'white') +
scale_x_continuous(breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank())
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year) %>%
ggplot() +
geom_tile(aes(x = year, y = country, fill = factor(number)), col = 'white') +
scale_x_continuous(breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal') +
labs(x = '', y = '')
?gudies
?guides
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
tidyr::gather(key = 'country', value = 'number', -year) %>%
ggplot() +
geom_tile(aes(x = year, y = country, fill = factor(number)), col = 'white') +
scale_x_continuous(breaks = seq(2000, 2020, 4),
labels = seq(2000, 2020, 4)) +
scale_fill_manual(values=c("#d53e4f","#fdae61","#abdda4")) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = 'bottom',
legend.direction = 'horizontal') +
guides(fill = guide_legend(title="Number of Surveys")) +
labs(x = '', y = '')
gc()
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0)
data %>%
mutate(year = lubridate::year(date)) %>%
group_by(year, name) %>%
tally() %>%
tidyr::spread(name, n, fill = 0) %>%
head()
data %>%
dplyr::select(date, name, dollar_price) %>%
tidyr::spread(key = name, value = dollar_price)
data %>%
dplyr::select(date, name, dollar_price) %>%
tidyr::spread(key = name, value = dollar_price) %>%
tidyr::gather(key = 'country', value = 'Price', -date)
data %>%
dplyr::select(date, name, dollar_price) %>%
tidyr::spread(key = name, value = dollar_price) %>%
tidyr::gather(key = 'country', value = 'Price', -date) %>%
ggplot() +
geom_tile(aes(x = date, y = country, fill = Price))
